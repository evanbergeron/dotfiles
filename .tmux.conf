# Control-f Leader
unbind C-b
set -g prefix C-f
bind C-f send-prefix

# Reload tmux.conf binding
bind-key r source-file ~/.tmux.conf \;
display "Config reloaded!"

# Background
set -g status-bg default

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Info on left
set -g status-left-length 60
set -g status-left '#[fg=blue]#(sh ~/.tmux/scripts/wifi) #[fg=white]| #[fg=yellow]#(sh ~/.tmux/scripts/music)'

# Info on right
set -g status-right-length 60
set -g status-right '#[fg=brightblue] #[fg=green]vol: #(sh ~/.tmux/scripts/volume)  #[fg=white]| #[fg=yellow]#(sh ~/.tmux/scripts/battery) #[fg=white]| #[fg=blue]%a %H:%M'

# Mysterious ghci fix
set -sg escape-time 0

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key o select-pane -t :.+

set-option -g default-terminal "screen-256color"
